<?php
require_once 'vendor/autoload.php'; // Cargar las dependencias de Sequelize
use Illuminate\Database\Capsule\Manager as Capsule;

// Configuración de la base de datos
$capsule = new Capsule;
$capsule->addConnection([
    'driver'    => 'mysql',
    'host'      => 'localhost',
    'database'  => 'nombre_de_la_base_de_datos',
    'username'  => 'usuario_de_mysql',
    'password'  => 'contraseña_de_mysql',
    'charset'   => 'utf8',
    'collation' => 'utf8_unicode_ci',
    'prefix'    => '',
]);
$capsule->setAsGlobal();
$capsule->bootEloquent();

// Función para validar el email
function validateEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

// Función para validar el texto con una longitud máxima
function validateText($text, $maxLength) {
    return strlen($text) <= $maxLength;
}

// Recibir los datos del formulario
$email = $_POST['email'];
$name = $_POST['name'];
$subject = $_POST['subject'];
$message = $_POST['message'];

// Validar los datos
if (!validateEmail($email) || !validateText($email, 120) ||
    !validateText($name, 50) || !validateText($subject, 150) || !validateText($message, 500)) {
    die("Invalid input data.");
}

// Securización contra SQL injection utilizando consultas preparadas
try {
    $pdo = Capsule::connection()->getPdo();
    $stmt = $pdo->prepare("INSERT INTO contacts (email, name, subject, message) VALUES (?, ?, ?, ?)");
    $stmt->execute([$email, $name, $subject, $message]);
    echo "Data saved successfully using prepared statements!";
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>