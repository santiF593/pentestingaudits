function validateForm() {
    var isValid = true;
  
    // Validar email
    var email = document.contactForm.email.value;
    var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  
    if (!emailPattern.test(email)) {
      document.querySelector(".email-error").style.display = "block";
      isValid = false;
    } else {
      document.querySelector(".email-error").style.display = "none";
    }
  
    // Validar nombre
    var name = document.contactForm.name.value;
  
    if (name.trim() === "") {
      document.querySelector(".name-error").style.display = "block";
      isValid = false;
    } else {
      document.querySelector(".name-error").style.display = "none";
    }
  
    // Validar asunto
    var subject = document.contactForm.subject.value;
  
    if (subject.trim() === "") {
      document.querySelector(".subject-error").style.display = "block";
      isValid = false;
    } else {
      document.querySelector(".subject-error").style.display = "none";
    }
  
    // Validar mensaje
    var message = document.contactForm.message.value;
  
    if (message.trim() === "") {
      document.querySelector(".message-error").style.display = "block";
      isValid = false;
    } else {
      document.querySelector(".message-error").style.display = "none";
    }
  
    // Validar reCAPTCHA
    var captcha = grecaptcha.getResponse();
  
    if (captcha === "") {
      // Mostrar mensaje de error del reCAPTCHA si no se ha resuelto
      document.querySelector(".captcha-error").style.display = "block";
      isValid = false;
    } else {
      // Ocultar mensaje de error del reCAPTCHA si se ha resuelto
      document.querySelector(".captcha-error").style.display = "none";
    }
  
    // Validar contra XSS
    var elementsToValidate = [email, name, subject, message];
    for (var i = 0; i < elementsToValidate.length; i++) {
      if (isXSS(elementsToValidate[i])) {
        isValid = false;
        break;
      }
    }
  
    // Resto del código para enviar el formulario o realizar otras acciones
  
    return isValid;
  }
  
  // Función para validar contra XSS
  function isXSS(input) {
    var regex = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
    return regex.test(input);
  }
  
  // Función para escapar caracteres especiales y prevenir XSS
  function escapeHTML(unsafeString) {
    return unsafeString.replace(/[&<"']/g, function (match) {
      switch (match) {
        case "&":
          return "&amp;";
        case "<":
          return "&lt;";
        case ">":
          return "&gt;";
        case "\"":
          return "&quot;";
        case "'":
          return "&#x27;";
        default:
          return match;
      }
    });
  }
  